

import uvm_pkg::*;
`include "uvm_macros.svh"

`timescale 1ns/1ns

`define TxPorts 4  // set number of transmit ports
`define RxPorts 4  // set number of receive ports


module top2;

	parameter int NumRx = `RxPorts;
	parameter int NumTx = `TxPorts;

	logic rst, clk;

	// System Clock and Reset
	initial begin
		rst = 0; clk = 0;
		#5ns rst = 1;
		#5ns clk = 1;
		#5ns rst = 0; clk = 0;
		forever 
      			#5ns clk = ~clk;
	end

	Utopia Rx[0:NumRx-1] ();	// NumRx x Level 1 Utopia Rx Interface
	Utopia Tx[0:NumTx-1] ();	// NumTx x Level 1 Utopia Tx Interface
	cpu_ifc mif();	  // Intel-style Utopia parallel management interface
	squat #(NumRx, NumTx) squat(Rx, Tx, mif, rst, clk);	// DUT

	initial 
	begin
		uvm_config_db#(virtual dut_if)::set(null, "*", "utopia_rx_if", Rx);
		uvm_config_db#(virtual dut_if)::set(null, "*", "utopia_tx_if", Tx);
		$dumpfile("dump.vcd"); $dumpvars;
	end	

	initial begin
		run_test();
 	end

endmodule : top2


